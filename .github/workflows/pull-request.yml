name: Comprobacion errores CI/CD

on:
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14

      - name: cd site/
        run: cd site/

      - name: Install dependencies
        run: npm install

      - name: Run unit tests
        run: |
          if [ -n "$(find . -name '*test.js')" ]; then
            npm test
          else
            echo "No unit tests found. Skipping..."
          fi

      - name: Verify if linter configuration exists
        id: check-linter
        run: |
          if [ -f ".eslintrc.js" ] || [ -f ".eslintrc.json" ] || [ -f ".eslintrc.yml" ] || [ -f ".eslintrc.yaml" ] || [ -f ".eslintrc" ]; then
            echo "::set-output name=linter-config::true"
            echo "Configuration exists"
          else
            echo "::set-output name=linter-config::false"
            echo "No configuration exists"
          fi

      - name: Lint code with ESLint
        run: |
          if [ "${{ steps.check-linter.outputs.linter-config }}" == "true" ]; then
            npx eslint .
          else
            echo "No linter configuration found. Skipping..."
          fi

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Deploy to production
        run: |
          echo 'Deploy to production'
          echo 'Production on jenkins'
          echo 'Deployed to production'

  review-approval:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Request review
        uses: reviewdog/action-approve@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          comment: "This pull request has been approved."

  notifications:
    needs: [build, deploy, review-approval]
    runs-on: ubuntu-latest

    steps:
      - name: Send notifications
        run: echo 'Send notifications to relevant parties'
